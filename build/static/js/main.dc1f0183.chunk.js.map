{"version":3,"sources":["images/alma.jpg","images/video.mp4","PannellumReact.js","UIButton.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["PannellumReact","width","height","image","myImage","pitch","yaw","hfov","autoLoad","onLoad","console","log","Hotspot","type","text","URL","video","myVideo","loop","minHfov","maxHfov","handleClick","evt","name","hanldeClick","UIButton","props","toggleMap","L","Control","extend","onAdd","map","helpDiv","DomUtil","create","innerHTML","title","addEventListener","position","this","createButtonControl","addTo","remove","React","Component","withMap","useMap","MapComp","MapContainer","center","zoom","scrollWheelZoom","style","TileLayer","attribution","url","component","App","className","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,MAA0B,iCCA1B,MAA0B,kC,gBCyE1BA,EAjEQ,kBACrB,gCACE,2DACA,eAAC,IAAD,CACIC,MAAM,OACNC,OAAO,QACPC,MAAOC,EACPC,MAAO,GACPC,IAAK,IACLC,KAAM,IACNC,UAAQ,EACRC,OAAQ,WACJC,QAAQC,IAAI,oBATpB,UAYE,cAAC,IAAUC,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,IACNQ,KAAK,sBACLC,IAAI,+CAGN,cAAC,IAAUH,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,IACNQ,KAAK,sBACLC,IAAI,kDAMR,eAAC,IAAD,CACEC,MAAOC,EACPC,MAAI,EACJjB,MAAM,OACNC,OAAO,QACPG,MAAO,GACPC,IAAK,IACLC,KAAM,IACNY,QAAS,GACTC,QAAS,IATX,UAWE,cAAC,IAAUR,QAAX,CACEC,KAAK,SACLR,MAAO,GACPC,IAAK,IACLe,YAAa,SAACC,EAAMC,GAAP,OAAgB,EAAKC,YAAYD,IAC9CA,KAAK,QAGP,cAAC,IAAUX,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,GACNQ,KAAK,OACLC,IAAI,sC,gDC7DNU,E,kDAEJ,WAAYC,GACX,IAAD,8BACI,cAAMA,IACDC,UAAYD,EAAMC,UAF3B,E,uDAKA,WAAuB,IAAD,OAcpB,OAAO,IAbSC,IAAEC,QAAQC,OAAO,CAC/BC,MAAO,SAACC,GACN,IAAMC,EAAUL,IAAEM,QAAQC,OAAO,SAAU,IAQ3C,OAPA,EAAKF,QAAUA,EACfA,EAAQG,UAAY,EAAKV,MAAMW,MAE/BJ,EAAQK,iBAAiB,SAAS,WAChC,EAAKZ,MAAMC,UAAU,WAGhBM,KAGJ,CAAY,CAAEM,SAAUC,KAAKd,MAAMa,a,+BAG5C,WAAqB,IACXP,EAAQQ,KAAKd,MAAbM,IACQQ,KAAKC,sBACbC,MAAMV,K,kCAGhB,WACEQ,KAAKP,QAAQU,W,oBAGf,WACE,OAAO,S,GApCYC,IAAMC,WA+CdC,IAPED,EAOFC,GAPED,EAOMpB,EANd,SAA0BC,GAC/B,IAAMM,EAAMe,cACZ,OAAO,cAACF,EAAD,2BAAenB,GAAf,IAAsBM,IAAKA,O,wBChBvBgB,MAjBf,SAAiBtB,GACb,OACI,eAACuB,EAAA,EAAD,CAAcC,OAAQ,CAAC,EAAG,GAAIC,KAAM,EAAGC,iBAAiB,EAAOC,MAAO,CAAEnD,OAAQ,QAASD,MAAO,SAAhG,UACE,cAACqD,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,gFAEN,cAAC,EAAD,CACEnB,MAAO,SACPoB,UAAU,aACVlB,SAAS,UACTZ,UAAWD,EAAMC,gBCpBJiB,IAAMC,UAuChBa,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAD,OC5BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dc1f0183.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alma.690bd3af.jpg\";","export default __webpack_public_path__ + \"static/media/video.8420cc1e.mp4\";","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n \nimport { Pannellum, PannellumVideo } from \"pannellum-react\";\nimport myImage from \"./images/alma.jpg\";\nimport myVideo from \"./images/video.mp4\";\n \n \nconst PannellumReact = () => (\n  <div>\n    <h1>Pannellum React Component</h1>\n    <Pannellum\n        width=\"100%\"\n        height=\"500px\"\n        image={myImage}\n        pitch={10}\n        yaw={180}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n            console.log(\"panorama loaded\");\n        }}\n    >\n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-107}\n        text=\"Info Hotspot Text 4\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n    </Pannellum>\n \n    {/******  for video 360 component *******/}\n \n    <PannellumVideo\n      video={myVideo}\n      loop\n      width=\"100%\"\n      height=\"600px\"\n      pitch={10}\n      yaw={180}\n      hfov={140}\n      minHfov={50}\n      maxHfov={180}\n    >\n      <Pannellum.Hotspot\n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , name) => this.hanldeClick(name)}\n        name=\"hs1\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-57}\n        text=\"Info\"\n        URL=\"https://github.com/farminf\"\n      />\n    </PannellumVideo>\n \n    </div>\n);\n \nexport default PannellumReact;","import React, { Component } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport switchComponent from \"./App\"\n\nclass UIButton extends React.Component {\n  helpDiv;\n  constructor(props)\n  {\n      super(props);\n      this.toggleMap = props.toggleMap;\n  }\n\n  createButtonControl() {\n    const MapHelp = L.Control.extend({\n      onAdd: (map) => {\n        const helpDiv = L.DomUtil.create(\"button\", \"\");\n        this.helpDiv = helpDiv;\n        helpDiv.innerHTML = this.props.title;\n\n        helpDiv.addEventListener(\"click\", () => {\n          this.props.toggleMap(\"Pano\");\n        });\n\n        return helpDiv;\n      }\n    });\n    return new MapHelp({ position: this.props.position });\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    const control = this.createButtonControl();\n    control.addTo(map);\n  }\n\n  componentWillUnmount() {\n    this.helpDiv.remove();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nfunction withMap(Component) {\n  return function WrappedComponent(props) {\n    const map = useMap();\n    return <Component {...props} map={map} />;\n  };\n}\n\nexport default withMap(UIButton);\n","import React, { useEffect, useRef } from \"react\";\n//import L from \"leaflet\";\n//import * as esri from 'esri-leaflet';\n//import * as ELG from \"esri-leaflet-geocoder\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { createControlComponent } from '@react-leaflet/core'\nimport { Control } from 'leaflet'\nimport UIButton from \"./UIButton\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\n\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\n\nfunction MapComp(props) {\n    return (\n        <MapContainer center={[0, 0]} zoom={3} scrollWheelZoom={false} style={{ height: \"100vh\", width: \"100wh\" }}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n          />\n          <UIButton\n            title={\"Switch\"}\n            component=\"PanoViewer\"\n            position=\"topleft\"\n            toggleMap={props.toggleMap}\n          />\n        </MapContainer>\n    );\n}\n\nexport default MapComp;","import React from 'react';\n//import { Pannellum } from \"pannellum-react\";\n//import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport PannellumReact from './PannellumReact.js'\nimport MapComp from './Map.js'\n\nclass Controller extends React.Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { currentComponent: 'Map' };\n    }\n\n    switchComponent(currentComponent)\n    {\n       this.setState({currentComponent: currentComponent});\n    };\n\n    render(){\n        return (\n            <div>\n                <div>\n                 {\n                    this.state.currentComponent === 'Map' &&\n                    <MapComp toggleMap={this.switchComponent()}/>\n                 }\n                 {\n                    this.state.currentComponent === 'PanoViewer' &&\n                    <PannellumReact toggleMap={this.switchComponent()}/>\n                 }\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapComp />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}