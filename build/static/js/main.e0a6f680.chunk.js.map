{"version":3,"sources":["images/alma.jpg","images/video.mp4","PannellumReact.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["PannellumReact","width","height","image","myImage","pitch","yaw","hfov","autoLoad","onLoad","console","log","Hotspot","type","text","URL","video","myVideo","loop","minHfov","maxHfov","handleClick","evt","name","hanldeClick","MapComp","center","zoom","geolocate","searchPlaces","marginClass","paddingClass","scrollWheelZoom","_height","_center","_zoom","leafletMap","useRef","LayersGroups","map","addMarkertoMap","latlng","draggable","textLocate","clearLayers","addLayer","L","marker","bindPopup","openPopup","setView","onLocationFound","e","onLocationError","alert","message","handlesMap","on","disable","enable","useEffect","current","leafletElement","esri","maxNativeZoom","addTo","LayerGroup","locate","watch","enableHighAccuracy","searchControl","data","i","results","length","handleSearchResults","ELG","MapContainer","className","style","ref","m","TileLayer","attribution","url","maxZoom","React","Component","App","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a6f680.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alma.690bd3af.jpg\";","export default __webpack_public_path__ + \"static/media/video.8420cc1e.mp4\";","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n \nimport { Pannellum, PannellumVideo } from \"pannellum-react\";\nimport myImage from \"./images/alma.jpg\";\nimport myVideo from \"./images/video.mp4\";\n \n \nconst PannellumReact = () => (\n  <div>\n    <h1>Pannellum React Component</h1>\n    <Pannellum\n        width=\"100%\"\n        height=\"500px\"\n        image={myImage}\n        pitch={10}\n        yaw={180}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n            console.log(\"panorama loaded\");\n        }}\n    >\n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-107}\n        text=\"Info Hotspot Text 4\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n    </Pannellum>\n \n    {/******  for video 360 component *******/}\n \n    <PannellumVideo\n      video={myVideo}\n      loop\n      width=\"100%\"\n      height=\"600px\"\n      pitch={10}\n      yaw={180}\n      hfov={140}\n      minHfov={50}\n      maxHfov={180}\n    >\n      <Pannellum.Hotspot\n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , name) => this.hanldeClick(name)}\n        name=\"hs1\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-57}\n        text=\"Info\"\n        URL=\"https://github.com/farminf\"\n      />\n    </PannellumVideo>\n \n    </div>\n);\n \nexport default PannellumReact;","import React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport * as esri from 'esri-leaflet';\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\n\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\n\nfunction MapComp({center, zoom, height, geolocate, searchPlaces, marginClass, paddingClass, scrollWheelZoom}) {\n\n    const _height = height || \"100vh\";\n    const _center = center || [0, 0];\n    const _zoom = zoom || \"3\";\n    const leafletMap = useRef(null);\n    let LayersGroups = null;\n    let map = null;\n\n    const addMarkertoMap = (latlng, draggable, textLocate) => {\n        LayersGroups.clearLayers();\n        LayersGroups.addLayer(L.marker(latlng, {draggable}).bindPopup(textLocate).openPopup());\n        map.setView(latlng);\n    }\n\n\n    const handleSearchResults = (searchControl) => {\n        searchControl.on(\"results\", function(data) {\n            for (let i = data.results.length - 1; i >= 0; i--) {\n                addMarkertoMap(data.results[i].latlng, true, data.text);\n            }\n        });\n    }\n\n    const onLocationFound = (e) => {\n        addMarkertoMap(e.latlng, true);\n    }\n\n    function onLocationError(e) {\n        alert(e.message);\n    }\n\n    const DisableScrollWheelZoom = () => {\n        if (!scrollWheelZoom) {\n            map.scrollWheelZoom.disable();\n            map.on('click', function() {\n                map.scrollWheelZoom.enable();\n            });\n            map.on('mouseout', function() { \n                map.scrollWheelZoom.disable(); \n            });\n        }\n    }\n\n    const handlesMap= () => {\n        map.on('locationfound', onLocationFound);\n        map.on('locationerror', onLocationError);\n        DisableScrollWheelZoom();\n    }\n\n    useEffect(() => {\n        map = leafletMap.current.leafletElement;\n        esri.basemapLayer(\"DarkGray\", { maxNativeZoom: 19}).addTo(map);\n\n        if (map) {\n            \n            LayersGroups = new L.LayerGroup().addTo(map);\n\n            if (geolocate) {\n                map.locate({watch: true, enableHighAccuracy: true});\n                handlesMap();\n            }\n\n            if (searchPlaces) {\n                const searchControl = new ELG.Geosearch().addTo(map);\n                handleSearchResults(searchControl);\n            }\n        }\n    }, [])\n   \n    return (\n        <MapContainer\n            className={`${marginClass|| 'm-0'} ${paddingClass|| 'p-0'}`}\n            style={{height:_height}}\n            center={_center}\n            zoom= {_zoom} \n            ref={m => {\n                leafletMap.current = m;\n            }}\n        >\n            <TileLayer\n                attribution=\"&copy; <a href='https://osm.org/copyright'>OpenStreetMap</a> contributors\"\n                url={\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"}\n                maxZoom=\"20\"\n            />\n            <div className=\"pointer\" />\n        </MapContainer>\n    );\n}\n\nexport default MapComp;","import React from 'react';\n//import { Pannellum } from \"pannellum-react\";\n//import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport PannellumReact from './PannellumReact.js'\nimport MapComp from './Map.js'\n\nclass Controller extends React.Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { currentComponent: 'Map' };\n    }\n\nswitchComponent(currentComponent)\n{\n    this.setState({currentComponent});\n};\n\nrender(){\n  return (\n    <div>\n        <div>\n         {\n            this.state.currentComponent === 'Map' &&\n            <MapComp />\n         }\n         {\n            this.state.currentComponent === 'PanoViewer' &&\n            <PannellumReact />\n         }\n        </div>\n    </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapComp />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}