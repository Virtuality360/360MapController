{"version":3,"sources":["images/alma.jpg","images/video.mp4","PannellumReact.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["PannellumReact","width","height","image","myImage","pitch","yaw","hfov","autoLoad","onLoad","console","log","Hotspot","type","text","URL","video","myVideo","loop","minHfov","maxHfov","handleClick","evt","name","hanldeClick","MapComp","MapContainer","center","zoom","scrollWheelZoom","style","TileLayer","attribution","url","Marker","position","Popup","React","Component","App","className","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,MAA0B,iCCA1B,MAA0B,kC,gBCyE1BA,EAjEQ,kBACrB,gCACE,2DACA,eAAC,IAAD,CACIC,MAAM,OACNC,OAAO,QACPC,MAAOC,EACPC,MAAO,GACPC,IAAK,IACLC,KAAM,IACNC,UAAQ,EACRC,OAAQ,WACJC,QAAQC,IAAI,oBATpB,UAYE,cAAC,IAAUC,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,IACNQ,KAAK,sBACLC,IAAI,+CAGN,cAAC,IAAUH,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,IACNQ,KAAK,sBACLC,IAAI,kDAMR,eAAC,IAAD,CACEC,MAAOC,EACPC,MAAI,EACJjB,MAAM,OACNC,OAAO,QACPG,MAAO,GACPC,IAAK,IACLC,KAAM,IACNY,QAAS,GACTC,QAAS,IATX,UAWE,cAAC,IAAUR,QAAX,CACEC,KAAK,SACLR,MAAO,GACPC,IAAK,IACLe,YAAa,SAACC,EAAMC,GAAP,OAAgB,EAAKC,YAAYD,IAC9CA,KAAK,QAGP,cAAC,IAAUX,QAAX,CACEC,KAAK,OACLR,MAAO,GACPC,KAAM,GACNQ,KAAK,OACLC,IAAI,sC,qECpCGU,MAhBf,YACI,OADkB,eAEd,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,QAAS,KAAOC,KAAM,GAAIC,iBAAiB,EAAOC,MAAO,CAAE5B,OAAQ,QAASD,MAAO,SAA1G,UACE,cAAC8B,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAU,CAAC,QAAS,KAA5B,SACE,eAACC,EAAA,EAAD,mCACuB,uBADvB,iCChBaC,IAAMC,UAuChBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAD,OC5BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1a6ff2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alma.690bd3af.jpg\";","export default __webpack_public_path__ + \"static/media/video.8420cc1e.mp4\";","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n \nimport { Pannellum, PannellumVideo } from \"pannellum-react\";\nimport myImage from \"./images/alma.jpg\";\nimport myVideo from \"./images/video.mp4\";\n \n \nconst PannellumReact = () => (\n  <div>\n    <h1>Pannellum React Component</h1>\n    <Pannellum\n        width=\"100%\"\n        height=\"500px\"\n        image={myImage}\n        pitch={10}\n        yaw={180}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n            console.log(\"panorama loaded\");\n        }}\n    >\n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-107}\n        text=\"Info Hotspot Text 4\"\n        URL=\"https://github.com/farminf/pannellum-react\"\n      />\n    </Pannellum>\n \n    {/******  for video 360 component *******/}\n \n    <PannellumVideo\n      video={myVideo}\n      loop\n      width=\"100%\"\n      height=\"600px\"\n      pitch={10}\n      yaw={180}\n      hfov={140}\n      minHfov={50}\n      maxHfov={180}\n    >\n      <Pannellum.Hotspot\n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , name) => this.hanldeClick(name)}\n        name=\"hs1\"\n      />\n \n      <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-57}\n        text=\"Info\"\n        URL=\"https://github.com/farminf\"\n      />\n    </PannellumVideo>\n \n    </div>\n);\n \nexport default PannellumReact;","import React, { useEffect, useRef } from \"react\";\n//import L from \"leaflet\";\n//import * as esri from 'esri-leaflet';\n//import * as ELG from \"esri-leaflet-geocoder\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { createControlComponent } from '@react-leaflet/core'\nimport { Control } from 'leaflet'\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\n\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\n\nfunction MapComp({}) {\n    return (\n        <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false} style={{ height: \"100vh\", width: \"100wh\" }}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker position={[51.505, -0.09]}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        </MapContainer>\n    );\n}\n\nexport default MapComp;","import React from 'react';\n//import { Pannellum } from \"pannellum-react\";\n//import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport PannellumReact from './PannellumReact.js'\nimport MapComp from './Map.js'\n\nclass Controller extends React.Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { currentComponent: 'Map' };\n    }\n\nswitchComponent(currentComponent)\n{\n    this.setState({currentComponent});\n};\n\nrender(){\n  return (\n    <div>\n        <div>\n         {\n            this.state.currentComponent === 'Map' &&\n            <MapComp />\n         }\n         {\n            this.state.currentComponent === 'PanoViewer' &&\n            <PannellumReact />\n         }\n        </div>\n    </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapComp />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}