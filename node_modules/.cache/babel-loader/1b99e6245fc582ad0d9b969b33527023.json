{"ast":null,"code":"import _createForOfIteratorHelper from \"/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/src/Map.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, CircleMarker } from \"react-leaflet\";\nimport { Images } from \"./PanoConfigs/PanoConfig.json\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport \"./overrides.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapComp = function MapComp(props) {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState(props.zoom),\n      _useState4 = _slicedToArray(_useState3, 2),\n      zoomLevel = _useState4[0],\n      setZoomLevel = _useState4[1];\n\n  var _useState5 = useState(props.latLong),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latLong = _useState6[0],\n      setlatLong = _useState6[1];\n\n  var markers = [];\n\n  var _iterator = _createForOfIteratorHelper(Images),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var _step$value = _step.value,\n          Latitude = _step$value.Latitude,\n          Longitude = _step$value.Longitude;\n      markers.push( /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [Latitude, Longitude],\n        eventHandlers: {\n          click: function click() {\n            props.toggleMap(\"PanoViewer\", [Latitude, Longitude], map.getZoom());\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, _this));\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    className: \"markercluster-map\",\n    center: latLong,\n    zoom: zoomLevel,\n    scrollWheelZoom: true,\n    whenCreated: setMap,\n    style: {\n      height: \"100%\",\n      width: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n      spiderfyDistanceMultiplier: 1,\n      showCoverageOnHover: false,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MapComp, \"C7T52wmOJkMLHrwVqyZFYFgwaZA=\");\n\n_c = MapComp;\nexport default MapComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapComp\");","map":{"version":3,"sources":["/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/src/Map.jsx"],"names":["React","useState","MapContainer","TileLayer","Marker","CircleMarker","Images","MarkerClusterGroup","MapComp","props","map","setMap","zoom","zoomLevel","setZoomLevel","latLong","setlatLong","markers","Latitude","Longitude","push","click","toggleMap","getZoom","height","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,YAA1C,QAA8D,eAA9D;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AAEA,OAAO,0BAAP;AACA,OAAO,iDAAP;AACA,OAAO,iBAAP;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACHR,QAAQ,CAAC,IAAD,CADL;AAAA;AAAA,MAClBS,GADkB;AAAA,MACbC,MADa;;AAAA,mBAESV,QAAQ,CAACQ,KAAK,CAACG,IAAP,CAFjB;AAAA;AAAA,MAElBC,SAFkB;AAAA,MAEPC,YAFO;;AAAA,mBAGKb,QAAQ,CAACQ,KAAK,CAACM,OAAP,CAHb;AAAA;AAAA,MAGlBA,OAHkB;AAAA,MAGTC,UAHS;;AAKzB,MAAIC,OAAO,GAAG,EAAd;;AALyB,6CAMaX,MANb;AAAA;;AAAA;AAAA;AAAA;AAAA,UAMZY,QANY,eAMZA,QANY;AAAA,UAMFC,SANE,eAMFA,SANE;AAOvBF,MAAAA,OAAO,CAACG,IAAR,eACE,QAAC,YAAD;AACE,QAAA,MAAM,EAAE,CAACF,QAAD,EAAWC,SAAX,CADV;AAEE,QAAA,aAAa,EAAE;AACbE,UAAAA,KAAK,EAAE,iBAAM;AACXZ,YAAAA,KAAK,CAACa,SAAN,CAAgB,YAAhB,EAA8B,CAACJ,QAAD,EAAWC,SAAX,CAA9B,EAAqDT,GAAG,CAACa,OAAJ,EAArD;AACD;AAHY;AAFjB;AAAA;AAAA;AAAA;AAAA,eADF;AAPuB;;AAMzB,wDAA8C;AAAA;AAW7C;AAjBwB;AAAA;AAAA;AAAA;AAAA;;AAmBzB,sBACE,QAAC,YAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,MAAM,EAAER,OAFV;AAGE,IAAA,IAAI,EAAEF,SAHR;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,WAAW,EAAEF,MALf;AAME,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KANT;AAAA,4BAQE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,0EADd;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,aARF,eAaE,QAAC,kBAAD;AACE,MAAA,0BAA0B,EAAE,CAD9B;AAEE,MAAA,mBAAmB,EAAE,KAFvB;AAAA,gBAIGR;AAJH;AAAA;AAAA;AAAA;AAAA,aAbF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CAzCD;;GAAMT,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, CircleMarker } from \"react-leaflet\";\nimport { Images } from \"./PanoConfigs/PanoConfig.json\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport \"./overrides.css\";\n\nconst MapComp = (props) => {\n  const [map, setMap] = useState(null);\n  const [zoomLevel, setZoomLevel] = useState(props.zoom);\n  const [latLong, setlatLong] = useState(props.latLong);\n\n  let markers = [];\n  for (const { Latitude, Longitude } of Images) {\n    markers.push(\n      <CircleMarker\n        center={[Latitude, Longitude]}\n        eventHandlers={{\n          click: () => {\n            props.toggleMap(\"PanoViewer\", [Latitude, Longitude], map.getZoom());\n          },\n        }}\n      ></CircleMarker>\n    );\n  }\n\n  return (\n    <MapContainer\n      className=\"markercluster-map\"\n      center={latLong}\n      zoom={zoomLevel}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n      style={{ height: \"100%\", width: \"100vh\" }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n      />\n\n      <MarkerClusterGroup\n        spiderfyDistanceMultiplier={1}\n        showCoverageOnHover={false}\n      >\n        {markers}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n};\n\nexport default MapComp;\n"]},"metadata":{},"sourceType":"module"}