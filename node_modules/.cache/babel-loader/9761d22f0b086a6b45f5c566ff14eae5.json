{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PannellumReact(props) {\n  _s();\n\n  var _useState = useState(\"GSAA2264\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      _setId = _useState2[1];\n\n  var _useState3 = useState(180),\n      _useState4 = _slicedToArray(_useState3, 2),\n      yaw = _useState4[0],\n      setYaw = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pitch = _useState6[0],\n      setPitch = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ImageSrc = _useState8[0],\n      setImageSrc = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Hotspots = _useState10[0],\n      setHotspots = _useState10[1];\n\n  function getJSONIndex(id) {\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageName) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  var setId = function setId(id) {\n    _setId(id);\n\n    var jsonIndex = getJSONIndex(id);\n    var _Images$jsonIndex = Images[jsonIndex],\n        MyImageSrc = _Images$jsonIndex.MyImageSrc,\n        MyHotspots = _Images$jsonIndex.MyHotspots;\n    setImageSrc(MyImageSrc);\n    setHotspots(MyHotspots);\n  };\n\n  function renderHotspots() {\n    var info = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageName) {\n        info.push(Images[i].Hotspots);\n      }\n    }\n\n    console.log(info);\n    return info;\n  }\n\n  ;\n\n  function handleClickHotspot(_ref) {\n    var path = _ref.path,\n        pitch = _ref.pitch,\n        yaw = _ref.yaw;\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  }\n\n  ;\n  var hotspots = [];\n  console.dir(getJSONIndex(id));\n\n  var _iterator = _createForOfIteratorHelper(Hotspots),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          Pitch = _step$value.Pitch,\n          Yaw = _step$value.Yaw,\n          Path = _step$value.Path;\n      hotspots.push( /*#__PURE__*/_jsxDEV(CustomPannellumHotspot, {\n        type: \"custom\",\n        pitch: Pitch,\n        yaw: Yaw,\n        path: Path,\n        handleClick: handleClickHotspot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pannellum, {\n      width: \"100%\",\n      height: \"1100px\",\n      image: ImageSrc,\n      pitch: pitch,\n      yaw: yaw,\n      hfov: 110,\n      autoLoad: true,\n      onLoad: function onLoad() {\n        console.log(\"panorama loaded\");\n      },\n      children: hotspots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PannellumReact, \"ooMYlIFbOivANB9EEjWL7Slu3N0=\");\n\n_c = PannellumReact;\nexport default PannellumReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"PannellumReact\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx"],"names":["React","Component","Button","useState","useRef","render","Pannellum","Images","_","shortid","CustomPannellumHotspot","PannellumReact","props","id","_setId","yaw","setYaw","pitch","setPitch","ImageSrc","setImageSrc","Hotspots","setHotspots","getJSONIndex","i","length","ImageName","setId","jsonIndex","MyImageSrc","MyHotspots","renderHotspots","info","push","console","log","handleClickHotspot","path","hotspots","dir","Pitch","Yaw","Path"],"mappings":"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","sourcesContent":["import React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\"\n\nfunction PannellumReact(props)\n{\n  const [id, _setId] = useState(\"GSAA2264\");\n  const [yaw, setYaw] = useState(180);\n  const [pitch, setPitch] = useState(0);\n  const [ImageSrc, setImageSrc] = useState(\"\");\n  const [Hotspots, setHotspots] = useState([]);\n\n  function getJSONIndex(id)\n    {\n      for (var i = 0; i < Images.length; i++) \n      {\n        if(id === Images[i].ImageName)\n        {\n          return i;\n        }\n      }\n      return null;\n    }\n\n  const setId = (id) => {\n    _setId(id);\n\n    let jsonIndex = getJSONIndex(id);\n\n    const {MyImageSrc, MyHotspots} = Images[jsonIndex];\n\n    setImageSrc(MyImageSrc);\n    setHotspots(MyHotspots);\n  }\n\n  function renderHotspots()\n  {\n    let info: Array<Array<any>> = [];\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(id === Images[i].ImageName)\n      {\n        info.push(Images[i].Hotspots);\n      }\n    }\n    console.log(info);\n\n    return info;\n  };\n\n  function handleClickHotspot({path, pitch, yaw}:click)\n  {\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  };\n\n  let hotspots = [];\n  console.dir(getJSONIndex(id));\n  \n\n  for(const {Pitch, Yaw, Path} of Hotspots)\n  {\n    hotspots.push(\n      <CustomPannellumHotspot\n        type=\"custom\"\n        pitch={Pitch}\n        yaw={Yaw}\n        path={Path}\n        handleClick={handleClickHotspot}\n      />\n    )\n  }\n\n  return(\n    <div>\n      <Pannellum\n        width=\"100%\"\n        height=\"1100px\"\n        image={ImageSrc}\n        pitch={pitch}\n        yaw={yaw}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n          console.log(\"panorama loaded\");\n        }}\n      >\n        {hotspots}\n      </Pannellum>\n    </div>\n  )\n}\n\nexport default PannellumReact;\n\n \n"]},"metadata":{},"sourceType":"module"}