{"ast":null,"code":"import _objectSpread from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/UIButton.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport switchComponent from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UIButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(UIButton, _React$Component);\n\n  var _super = _createSuper(UIButton);\n\n  function UIButton() {\n    _classCallCheck(this, UIButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UIButton, [{\n    key: \"createButtonControl\",\n    value: function createButtonControl() {\n      var _this = this;\n\n      var MapHelp = L.Control.extend({\n        onAdd: function onAdd(map) {\n          var helpDiv = L.DomUtil.create(\"button\", \"\");\n          _this.helpDiv = helpDiv;\n          helpDiv.innerHTML = _this.props.title;\n          var self = _this;\n\n          function handleClick() {\n            getMapCenter();\n            self.props.toggleMap(\"PanoViewer\");\n          }\n\n          helpDiv.addEventListener(\"click\", handleClick);\n          return helpDiv;\n        }\n      });\n      return new MapHelp({\n        position: this.props.position\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var map = this.props.map;\n      var control = this.createButtonControl();\n      control.addTo(map);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.helpDiv.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return UIButton;\n}(React.Component);\n\nfunction withMap(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(function WrappedComponent(props) {\n    _s();\n\n    var map = useMap();\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, props), {}, {\n      map: map\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n}\n\nfunction getMapCenter() {\n  _s2();\n\n  var map = useMap();\n  console.log('map center:', map.getCenter());\n  return null;\n}\n\n_s2(getMapCenter, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n\nexport default _c = withMap(UIButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/UIButton.js"],"names":["React","Component","useMap","L","LeafletMouseEvent","Map","switchComponent","UIButton","MapHelp","Control","extend","onAdd","map","helpDiv","DomUtil","create","innerHTML","props","title","self","handleClick","getMapCenter","toggleMap","addEventListener","position","control","createButtonControl","addTo","remove","withMap","WrappedComponent","console","log","getCenter"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,CAAP,IAAYC,iBAAZ,EAA+BC,GAA/B,QAA0C,SAA1C;AACA,OAAOC,eAAP,MAA4B,OAA5B;;;IAEMC,Q;;;;;;;;;;;;;WAGJ,+BAAsB;AAAA;;AACpB,UAAMC,OAAO,GAAGL,CAAC,CAACM,OAAF,CAAUC,MAAV,CAAiB;AAC/BC,QAAAA,KAAK,EAAE,eAACC,GAAD,EAAS;AACd,cAAMC,OAAO,GAAGV,CAAC,CAACW,OAAF,CAAUC,MAAV,CAAiB,QAAjB,EAA2B,EAA3B,CAAhB;AACA,UAAA,KAAI,CAACF,OAAL,GAAeA,OAAf;AACAA,UAAAA,OAAO,CAACG,SAAR,GAAoB,KAAI,CAACC,KAAL,CAAWC,KAA/B;AAEA,cAAIC,IAAI,GAAG,KAAX;;AAEA,mBAASC,WAAT,GACA;AACEC,YAAAA,YAAY;AACZF,YAAAA,IAAI,CAACF,KAAL,CAAWK,SAAX,CAAqB,YAArB;AACD;;AAEDT,UAAAA,OAAO,CAACU,gBAAR,CAAyB,OAAzB,EAAkCH,WAAlC;AAEA,iBAAOP,OAAP;AACD;AAjB8B,OAAjB,CAAhB;AAmBA,aAAO,IAAIL,OAAJ,CAAY;AAAEgB,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO;AAAvB,OAAZ,CAAP;AACD;;;WAED,6BAAoB;AAAA,UACVZ,GADU,GACF,KAAKK,KADH,CACVL,GADU;AAElB,UAAMa,OAAO,GAAG,KAAKC,mBAAL,EAAhB;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcf,GAAd;AACD;;;WAED,gCAAuB;AACrB,WAAKC,OAAL,CAAae,MAAb;AACD;;;WAED,kBAAS;AACP,aAAO,IAAP;AACD;;;;EAtCoB5B,KAAK,CAACC,S;;AAyC7B,SAAS4B,OAAT,CAAiB5B,SAAjB,EACA;AAAA;;AACE,YAAO,SAAS6B,gBAAT,CAA0Bb,KAA1B,EACP;AAAA;;AACE,QAAML,GAAG,GAAGV,MAAM,EAAlB;AACA,wBAAO,QAAC,SAAD,kCAAee,KAAf;AAAsB,MAAA,GAAG,EAAEL;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJD;AAAA,YAEcV,MAFd;AAAA;AAKD;;AAED,SAASmB,YAAT,GACA;AAAA;;AACE,MAAMT,GAAG,GAAGV,MAAM,EAAlB;AACA6B,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BpB,GAAG,CAACqB,SAAJ,EAA3B;AACA,SAAO,IAAP;AACD;;IALQZ,Y;UAEKnB,M;;;AAMd,oBAAe2B,OAAO,CAACtB,QAAD,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport switchComponent from \"./App\"\n\nclass UIButton extends React.Component {\n  helpDiv;\n\n  createButtonControl() {\n    const MapHelp = L.Control.extend({\n      onAdd: (map) => {\n        const helpDiv = L.DomUtil.create(\"button\", \"\");\n        this.helpDiv = helpDiv;\n        helpDiv.innerHTML = this.props.title;\n\n        let self = this;\n\n        function handleClick()\n        {\n          getMapCenter();\n          self.props.toggleMap(\"PanoViewer\");\n        }\n\n        helpDiv.addEventListener(\"click\", handleClick);\n\n        return helpDiv;\n      }\n    });\n    return new MapHelp({ position: this.props.position });\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    const control = this.createButtonControl();\n    control.addTo(map);\n  }\n\n  componentWillUnmount() {\n    this.helpDiv.remove();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nfunction withMap(Component) \n{\n  return function WrappedComponent(props) \n  {\n    const map = useMap();\n    return <Component {...props} map={map} />;\n  };\n}\n\nfunction getMapCenter() \n{\n  const map = useMap()\n  console.log('map center:', map.getCenter())\n  return null\n}\n\n\nexport default withMap(UIButton);\n"]},"metadata":{},"sourceType":"module"}