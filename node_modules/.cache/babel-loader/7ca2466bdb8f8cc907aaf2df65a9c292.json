{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PannellumReact(props) {\n  _s();\n\n  var _this = this;\n\n  function loadLatLong() {\n    for (var i = 0; i < Images.length; i++) {\n      if (props.latLong[0] === Images[i].Latitude) {\n        if (props.latLong[1] === Images[i].Longitude) {\n          return Images[i].ImageId;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  ;\n\n  var _useState = useState(loadLatLong()),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(180),\n      _useState4 = _slicedToArray(_useState3, 2),\n      yaw = _useState4[0],\n      setYaw = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pitch = _useState6[0],\n      setPitch = _useState6[1];\n\n  function getJSONIndex() {\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageId) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  ;\n\n  function renderHotspots() {\n    var info = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageId) {\n        info.push(Images[i].Hotspots);\n      }\n    }\n\n    return info;\n  }\n\n  ;\n\n  function handleClickHotspot(path, pitch, yaw) {\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  }\n\n  ;\n  var hotspots = [];\n  var _Images$getJSONIndex = Images[getJSONIndex()],\n      ImageSrc = _Images$getJSONIndex.ImageSrc,\n      Hotspots = _Images$getJSONIndex.Hotspots;\n\n  var _iterator = _createForOfIteratorHelper(Hotspots),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var _step$value = _step.value,\n          Pitch = _step$value.Pitch,\n          Yaw = _step$value.Yaw,\n          Path = _step$value.Path;\n      hotspots.push(\n      /*#__PURE__*/\n\n      /*<Pannellum.Hotspot\n        type=\"custom\"\n        pitch={Pitch}\n        yaw={Yaw}\n        key={shortid.generate()}\n        handleClick={() => handleClickHotspot(Path, Pitch, Yaw)}\n      />*/\n      _jsxDEV(CustomPannellumHotspot, {\n        type: \"custom\",\n        pitch: Pitch,\n        yaw: Yaw,\n        handleClick: function handleClick() {\n          return handleClickHotspot(Path, Pitch, Yaw);\n        } //handleClick = {_.bind(handleClickHotspot, this)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, _this));\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pannellum, {\n      width: \"100%\",\n      height: \"1000px\",\n      image: ImageSrc,\n      pitch: pitch,\n      yaw: yaw,\n      hfov: 110,\n      autoLoad: true,\n      onLoad: function onLoad() {\n        console.log(\"panorama loaded\");\n      },\n      children: hotspots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PannellumReact, \"ONcHAs86lSF7d6lhgPGNT4x23BM=\");\n\n_c = PannellumReact;\nexport default PannellumReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"PannellumReact\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx"],"names":["React","Component","Button","useState","useRef","render","Pannellum","Images","_","shortid","CustomPannellumHotspot","PannellumReact","props","loadLatLong","i","length","latLong","Latitude","Longitude","ImageId","id","setId","yaw","setYaw","pitch","setPitch","getJSONIndex","renderHotspots","info","push","Hotspots","handleClickHotspot","path","hotspots","ImageSrc","Pitch","Yaw","Path","console","log"],"mappings":"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","sourcesContent":["import React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\";\n\nfunction PannellumReact(props)\n{\n  function loadLatLong()\n  {\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(props.latLong[0] === Images[i].Latitude)\n      {\n        if(props.latLong[1] === Images[i].Longitude)\n        {\n          return Images[i].ImageId;\n        }\n      }\n    }\n    return null;\n  };\n\n  const [id, setId] = useState(loadLatLong());\n  const [yaw, setYaw] = useState(180);\n  const [pitch, setPitch] = useState(0);\n\n  \n\n  function getJSONIndex()\n  {\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(id === Images[i].ImageId)\n      {\n        return i;\n      }\n    }\n    return null;\n  };\n\n  function renderHotspots()\n  {\n    let info: Array<Array<any>> = [];\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(id === Images[i].ImageId)\n      {\n        info.push(Images[i].Hotspots);\n      }\n    }\n\n    return info;\n  };\n\n  function handleClickHotspot(path, pitch, yaw)\n  {\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  };\n\n  let hotspots = [];\n  const {ImageSrc, Hotspots} = Images[getJSONIndex()];\n\n  for(const {Pitch, Yaw, Path} of Hotspots)\n  {\n    hotspots.push(\n      /*<Pannellum.Hotspot\n        type=\"custom\"\n        pitch={Pitch}\n        yaw={Yaw}\n        key={shortid.generate()}\n        handleClick={() => handleClickHotspot(Path, Pitch, Yaw)}\n      />*/\n      \n      <CustomPannellumHotspot\n        type=\"custom\"\n        pitch={Pitch}\n        yaw={Yaw}\n        handleClick ={() => handleClickHotspot(Path, Pitch, Yaw)}\n        //handleClick = {_.bind(handleClickHotspot, this)}\n      />\n    )\n  }\n\n  return(\n    <div>\n      <Pannellum\n        width=\"100%\"\n        height=\"1000px\"\n        image={ImageSrc}\n        pitch={pitch}\n        yaw={yaw}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n          console.log(\"panorama loaded\");\n        }}\n      >\n        {hotspots}\n      </Pannellum>\n    </div>\n  )\n}\n\nexport default PannellumReact;\n\n \n"]},"metadata":{},"sourceType":"module"}