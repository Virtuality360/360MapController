{"ast":null,"code":"import _slicedToArray from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Button } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PannellumReact(props) {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(180),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      yaw = _React$useState4[0],\n      setYaw = _React$useState4[1];\n\n  var _React$useState5 = React.useState(10),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      pitch = _React$useState6[0],\n      setPitch = _React$useState6[1];\n\n  function renderHotspots() {\n    var info = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      var temp = [];\n      temp.push(Images[i].Hotspots);\n      info.push(temp);\n    }\n\n    console.log(info);\n    return info;\n  }\n\n  ;\n\n  function handleClickHotspot(evt, args, change) {\n    console.log(\"Change Pano Button Clicked\");\n    console.log(id);\n\n    if (change > 0) {\n      setYaw(180);\n      setPitch(10);\n    } else {\n      setYaw(0);\n      setPitch(0);\n    }\n\n    setId(id + change);\n    console.log(id);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pannellum, {\n      width: \"100%\",\n      height: \"1100px\",\n      image: Images[id].ImageSrc,\n      pitch: pitch,\n      yaw: yaw,\n      hfov: 110,\n      autoLoad: true,\n      onLoad: function onLoad() {\n        console.log(\"panorama loaded\");\n      },\n      children: renderHotspots().length > 0 && renderHotspots().map(function (value, index) {\n        return /*#__PURE__*/_jsxDEV(Pannellum.Hotspot, {\n          type: \"custom\",\n          pitch: 0,\n          yaw: 180,\n          handleClick: function handleClick() {\n            return handleClickHotspot(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PannellumReact, \"izY8KfZ7SjNUKGzaMMizhZq5Xi0=\");\n\n_c = PannellumReact;\nexport default PannellumReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"PannellumReact\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx"],"names":["React","Component","Button","render","Pannellum","Images","_","PannellumReact","props","useState","id","setId","yaw","setYaw","pitch","setPitch","renderHotspots","info","i","length","temp","push","Hotspots","console","log","handleClickHotspot","evt","args","change","ImageSrc","map","value","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EACA;AAAA;;AAAA;;AAAA,wBACsBR,KAAK,CAACS,QAAN,CAAe,CAAf,CADtB;AAAA;AAAA,MACSC,EADT;AAAA,MACaC,KADb;;AAAA,yBAEwBX,KAAK,CAACS,QAAN,CAAe,GAAf,CAFxB;AAAA;AAAA,MAESG,GAFT;AAAA,MAEcC,MAFd;;AAAA,yBAG4Bb,KAAK,CAACS,QAAN,CAAe,EAAf,CAH5B;AAAA;AAAA,MAGSK,KAHT;AAAA,MAGgBC,QAHhB;;AAKE,WAASC,cAAT,GACA;AACE,QAAIC,IAAuB,GAAG,EAA9B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,MAAM,CAACc,MAA3B,EAAmCD,CAAC,EAApC,EACA;AACE,UAAIE,IAAgB,GAAG,EAAvB;AACAA,MAAAA,IAAI,CAACC,IAAL,CAAUhB,MAAM,CAACa,CAAD,CAAN,CAAUI,QAApB;AACAL,MAAAA,IAAI,CAACI,IAAL,CAAUD,IAAV;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,WAAOA,IAAP;AACD;;AAAA;;AAED,WAASQ,kBAAT,CAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,MAAvC,EACA;AACEL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYd,EAAZ;;AAEA,QAAGkB,MAAM,GAAG,CAAZ,EACA;AACEf,MAAAA,MAAM,CAAC,GAAD,CAAN;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAJD,MAMA;AACEF,MAAAA,MAAM,CAAC,CAAD,CAAN;AACAE,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AAEDJ,IAAAA,KAAK,CAACD,EAAE,GAAGkB,MAAN,CAAL;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYd,EAAZ;AACD;;AAAA;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,KAAK,EAAEL,MAAM,CAACK,EAAD,CAAN,CAAWmB,QAHpB;AAIE,MAAA,KAAK,EAAEf,KAJT;AAKE,MAAA,GAAG,EAAEF,GALP;AAME,MAAA,IAAI,EAAE,GANR;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,MAAM,EAAE,kBAAM;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAVH;AAAA,gBAYGR,cAAc,GAAGG,MAAjB,GAA0B,CAA1B,IACCH,cAAc,GAAGc,GAAjB,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,4BACE,QAAC,SAAD,CAAW,OAAX;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAE,CAFT;AAGE,UAAA,GAAG,EAAE,GAHP;AAIE,UAAA,WAAW,EAAE;AAAA,mBAAMP,kBAAkB,CAAC,CAAD,CAAxB;AAAA;AAJf;AAAA;AAAA;AAAA;AAAA,iBADF;AAQF,OATA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GApEQlB,c;;KAAAA,c;AAsET,eAAeA,cAAf","sourcesContent":["import React, { Component, Button } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\n\nfunction PannellumReact(props)\n{\n  const [id, setId] = React.useState(0);\n  const [yaw, setYaw] = React.useState(180);\n  const [pitch, setPitch] = React.useState(10);\n\n  function renderHotspots()\n  {\n    let info: Array<Array<any>> = [];\n    for (var i = 0; i < Images.length; i++) \n    {\n      let temp: Array<any> = [];\n      temp.push(Images[i].Hotspots);\n      info.push(temp);\n    }\n    console.log(info);\n\n    return info;\n  };\n\n  function handleClickHotspot(evt, args, change)\n  {\n    console.log(\"Change Pano Button Clicked\");\n    console.log(id);\n\n    if(change > 0)\n    {\n      setYaw(180);\n      setPitch(10);\n    }\n    else\n    {\n      setYaw(0);\n      setPitch(0);\n    }\n\n    setId(id + change);\n    console.log(id);\n  };\n\n  return(\n    <div>\n      <Pannellum\n        width=\"100%\"\n        height=\"1100px\"\n        image={Images[id].ImageSrc}\n        pitch={pitch}\n        yaw={yaw}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n          console.log(\"panorama loaded\");\n        }}\n      >\n        {renderHotspots().length > 0 &&\n          renderHotspots().map((value, index) => {\n            return (\n              <Pannellum.Hotspot\n                type=\"custom\"\n                pitch={0}\n                yaw={180}\n                handleClick={() => handleClickHotspot(1)}\n              />\n            );\n         })}\n      </Pannellum>\n    </div>\n  )\n}\n\nexport default PannellumReact;\n\n \n"]},"metadata":{},"sourceType":"module"}