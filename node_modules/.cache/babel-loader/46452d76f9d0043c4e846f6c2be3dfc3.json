{"ast":null,"code":"var _jsxFileName = \"/Users/daltonchichester/Desktop/Desktop Folder/Work Folder/react-controller/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport * as esri from 'esri-leaflet';\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\"; // import marker icons\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png\",\n  iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\n});\n\nfunction MapComp({\n  center,\n  zoom,\n  height,\n  geolocate,\n  searchPlaces,\n  marginClass,\n  paddingClass,\n  scrollWheelZoom\n}) {\n  _s();\n\n  const _height = height || \"100vh\";\n\n  const _center = center || [37.7833, -122.4167];\n\n  const _zoom = zoom || \"16\";\n\n  const leafletMap = useRef(null);\n  let LayersGroups = null;\n  let map = null;\n\n  const addMarkertoMap = (latlng, draggable, textLocate) => {\n    LayersGroups.clearLayers();\n    LayersGroups.addLayer(L.marker(latlng, {\n      draggable\n    }).bindPopup(textLocate).openPopup());\n    map.setView(latlng);\n  };\n\n  const handleSearchResults = searchControl => {\n    searchControl.on(\"results\", function (data) {\n      for (let i = data.results.length - 1; i >= 0; i--) {\n        addMarkertoMap(data.results[i].latlng, true, data.text);\n      }\n    });\n  };\n\n  const onLocationFound = e => {\n    addMarkertoMap(e.latlng, true);\n  };\n\n  function onLocationError(e) {\n    alert(e.message);\n  }\n\n  const DisableScrollWheelZoom = () => {\n    if (!scrollWheelZoom) {\n      map.scrollWheelZoom.disable();\n      map.on('click', function () {\n        map.scrollWheelZoom.enable();\n      });\n      map.on('mouseout', function () {\n        map.scrollWheelZoom.disable();\n      });\n    }\n  };\n\n  const handlesMap = () => {\n    map.on('locationfound', onLocationFound);\n    map.on('locationerror', onLocationError);\n    DisableScrollWheelZoom();\n  };\n\n  useEffect(() => {\n    map = leafletMap.current.leafletElement; //esri.basemapLayer(\"DarkGray\", { maxNativeZoom: 19}).addTo(map);\n\n    if (map) {\n      LayersGroups = new L.LayerGroup().addTo(map);\n\n      if (geolocate) {\n        map.locate({\n          watch: true,\n          enableHighAccuracy: true\n        });\n        handlesMap();\n      }\n\n      if (searchPlaces) {\n        const searchControl = new ELG.Geosearch().addTo(map);\n        handleSearchResults(searchControl);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    className: `${marginClass || 'm-0'} ${paddingClass || 'p-0'}`,\n    style: {\n      height: _height\n    },\n    center: _center,\n    zoom: _zoom,\n    ref: m => {\n      leafletMap.current = m;\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href='https://osm.org/copyright'>OpenStreetMap</a> contributors\",\n      url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n      maxZoom: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MapComp, \"ZVFKsoQ1sDhU3cfWN3Sf3rU//KU=\");\n\n_c = MapComp;\nexport default MapComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapComp\");","map":{"version":3,"sources":["/Users/daltonchichester/Desktop/Desktop Folder/Work Folder/react-controller/src/Map.js"],"names":["React","useEffect","useRef","L","esri","ELG","Map","TileLayer","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapComp","center","zoom","height","geolocate","searchPlaces","marginClass","paddingClass","scrollWheelZoom","_height","_center","_zoom","leafletMap","LayersGroups","map","addMarkertoMap","latlng","draggable","textLocate","clearLayers","addLayer","marker","bindPopup","openPopup","setView","handleSearchResults","searchControl","on","data","i","results","length","text","onLocationFound","e","onLocationError","alert","message","DisableScrollWheelZoom","disable","enable","handlesMap","current","leafletElement","LayerGroup","addTo","locate","watch","enableHighAccuracy","Geosearch","m"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport * as esri from 'esri-leaflet';\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { Map, TileLayer } from \"react-leaflet\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\n\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\n\n// import marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon-2x.png\",\n  iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\n});\n\nfunction MapComp({center, zoom, height, geolocate, searchPlaces, marginClass, paddingClass, scrollWheelZoom}) {\n\n    const _height = height || \"100vh\";\n    const _center = center || [37.7833, -122.4167];\n    const _zoom = zoom || \"16\";\n    const leafletMap = useRef(null);\n    let LayersGroups = null;\n    let map = null;\n\n    const addMarkertoMap = (latlng, draggable, textLocate) => {\n        LayersGroups.clearLayers();\n        LayersGroups.addLayer(L.marker(latlng, {draggable}).bindPopup(textLocate).openPopup());\n        map.setView(latlng);\n    }\n\n\n    const handleSearchResults = (searchControl) => {\n        searchControl.on(\"results\", function(data) {\n            for (let i = data.results.length - 1; i >= 0; i--) {\n                addMarkertoMap(data.results[i].latlng, true, data.text);\n            }\n        });\n    }\n\n    const onLocationFound = (e) => {\n        addMarkertoMap(e.latlng, true);\n    }\n\n    function onLocationError(e) {\n        alert(e.message);\n    }\n\n    const DisableScrollWheelZoom = () => {\n        if (!scrollWheelZoom) {\n            map.scrollWheelZoom.disable();\n            map.on('click', function() {\n                map.scrollWheelZoom.enable();\n            });\n            map.on('mouseout', function() { \n                map.scrollWheelZoom.disable(); \n            });\n        }\n    }\n\n    const handlesMap= () => {\n        map.on('locationfound', onLocationFound);\n        map.on('locationerror', onLocationError);\n        DisableScrollWheelZoom();\n    }\n\n    useEffect(() => {\n        map = leafletMap.current.leafletElement;\n        //esri.basemapLayer(\"DarkGray\", { maxNativeZoom: 19}).addTo(map);\n\n        if (map) {\n            \n            LayersGroups = new L.LayerGroup().addTo(map);\n\n            if (geolocate) {\n                map.locate({watch: true, enableHighAccuracy: true});\n                handlesMap();\n            }\n\n            if (searchPlaces) {\n                const searchControl = new ELG.Geosearch().addTo(map);\n                handleSearchResults(searchControl);\n            }\n        }\n    }, [])\n   \n    return (\n        <Map\n            className={`${marginClass|| 'm-0'} ${paddingClass|| 'p-0'}`}\n            style={{height:_height}}\n            center={_center}\n            zoom= {_zoom} \n            ref={m => {\n                leafletMap.current = m;\n            }}\n        >\n            <TileLayer\n                attribution=\"&copy; <a href='https://osm.org/copyright'>OpenStreetMap</a> contributors\"\n                url={\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"}\n                maxZoom=\"20\"\n            />\n            <div className=\"pointer\" />\n        </Map>\n    );\n}\n\nexport default MapComp;\n"]},"metadata":{},"sourceType":"module"}