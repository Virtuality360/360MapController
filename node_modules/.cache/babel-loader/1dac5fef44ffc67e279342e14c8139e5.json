{"ast":null,"code":"var _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/Map.jsx\";\nimport React, { useEffect, useRef, Component } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMap } from 'react-leaflet';\nimport { createControlComponent } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport UIButton from \"./UIButton\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction MapComp(props) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _this = this;\n\n  function renderMarkers() {\n    var latLong = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      var temp = [];\n      temp.push(Images[i].Latitude, Images[i].Longitude);\n      latLong.push(temp);\n    }\n\n    console.log(latLong);\n    return latLong;\n  }\n\n  ;\n\n  function getMapCenter() {\n    _s();\n\n    var map = useMap();\n    console.log('map center:', map.getCenter());\n    return map.getCenter();\n  }\n\n  _s(getMapCenter, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n\n  function getMapZoom() {\n    _s2();\n\n    var map = useMap();\n    console.log('map zoom:', map.getZoom());\n    return map.getZoom();\n  }\n\n  _s2(getMapZoom, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [0, 0],\n    zoom: 3,\n    scrollWheelZoom: true,\n    style: {\n      height: \"100vh\",\n      width: \"100wh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), renderMarkers().length > 0 && renderMarkers().map(function (value, index) {\n      var _s3 = $RefreshSig$();\n\n      return /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [value[0], value[1]],\n        eventHandlers: {\n          click: _s3(function click() {\n            _s3();\n\n            var map = useMap();\n            props.toggleMap(\"PanoViewer\", [[value[0], value[1]], map.getCenter(), map.getZoom()]);\n          }, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n            return [useMap];\n          })\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MapComp;\nexport default MapComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapComp\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/Map.jsx"],"names":["React","useEffect","useRef","Component","MapContainer","TileLayer","Marker","Popup","CircleMarker","useMap","createControlComponent","Control","UIButton","Images","L","LeafletMouseEvent","Map","icon","iconShadow","DefaultIcon","iconUrl","shadowUrl","prototype","options","MapComp","props","renderMarkers","latLong","i","length","temp","push","Latitude","Longitude","console","log","getMapCenter","map","getCenter","getMapZoom","getZoom","height","width","value","index","click","toggleMap"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, Component } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup , CircleMarker, useMap} from 'react-leaflet'\nimport { createControlComponent } from '@react-leaflet/core'\nimport { Control } from 'leaflet'\nimport UIButton from \"./UIButton\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\n\nimport \"leaflet/dist/leaflet.js\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.js\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction MapComp(props)\n{\n  function renderMarkers()\n  {\n    let latLong: Array<Array<any>> = [];\n    for (var i = 0; i < Images.length; i++) \n    {\n      let temp: Array<any> = [];\n      temp.push(Images[i].Latitude, Images[i].Longitude);\n      latLong.push(temp);\n    }\n    console.log(latLong);\n\n    return latLong;\n  };\n\n  function getMapCenter() \n  {\n    const map = useMap();\n    console.log('map center:', map.getCenter());\n    return map.getCenter();\n  }\n\n\n  function getMapZoom() \n  {\n    const map = useMap();\n    console.log('map zoom:', map.getZoom());\n    return map.getZoom();\n  }\n\n\n  return(\n  <MapContainer center={[0, 0]} zoom={3} scrollWheelZoom={true} style={{ height: \"100vh\", width: \"100wh\" }}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n    />\n    {renderMarkers().length > 0 &&\n      renderMarkers().map((value, index) => {\n        return (\n          <CircleMarker center={[value[0], value[1]]} key={index} eventHandlers={{\n            click: () => {const map = useMap(); props.toggleMap(\"PanoViewer\", [[value[0], value[1]], map.getCenter(), map.getZoom()])}}}>\n          </CircleMarker>\n        );\n     })}\n  </MapContainer>\n  )\n}\n\nexport default MapComp;"]},"metadata":{},"sourceType":"module"}