{"ast":null,"code":"import _createForOfIteratorHelper from\"/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{MapContainer,TileLayer,Marker,CircleMarker}from\"react-leaflet\";import{Images}from\"./PanoConfigs/PanoConfigJesse.json\";import MarkerClusterGroup from\"react-leaflet-markercluster\";import\"leaflet/dist/leaflet.css\";import\"react-leaflet-markercluster/dist/styles.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MapComp=function MapComp(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var _useState3=useState(props.zoom),_useState4=_slicedToArray(_useState3,2),zoomLevel=_useState4[0],setZoomLevel=_useState4[1];var _useState5=useState(props.latLong),_useState6=_slicedToArray(_useState5,2),latLong=_useState6[0],setlatLong=_useState6[1];var markers=[];var _iterator=_createForOfIteratorHelper(Images),_step;try{var _loop=function _loop(){var _step$value=_step.value,Latitude=_step$value.Latitude,Longitude=_step$value.Longitude;markers.push(/*#__PURE__*/_jsx(CircleMarker,{center:[Latitude,Longitude],eventHandlers:{click:function click(){props.toggleMap(\"PanoViewer\",[Latitude,Longitude],map.getZoom());}}}));};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsxs(MapContainer,{className:\"markercluster-map\",center:latLong,zoom:zoomLevel,scrollWheelZoom:true,whenCreated:setMap,style:{height:\"100vh\",width:\"100%\"},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(MarkerClusterGroup,{spiderfyDistanceMultiplier:1,showCoverageOnHover:false,children:markers})]});};export default MapComp;","map":{"version":3,"sources":["/srv/wordpress/wp-content/reactpress/apps/360mapcontroller/src/Map.jsx"],"names":["React","useState","MapContainer","TileLayer","Marker","CircleMarker","Images","MarkerClusterGroup","MapComp","props","map","setMap","zoom","zoomLevel","setZoomLevel","latLong","setlatLong","markers","Latitude","Longitude","push","click","toggleMap","getZoom","height","width"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,CAAuBC,SAAvB,CAAkCC,MAAlC,CAA0CC,YAA1C,KAA8D,eAA9D,CACA,OAASC,MAAT,KAAuB,oCAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,CAEA,MAAO,0BAAP,CACA,MAAO,iDAAP,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,eACHR,QAAQ,CAAC,IAAD,CADL,wCAClBS,GADkB,eACbC,MADa,8BAESV,QAAQ,CAACQ,KAAK,CAACG,IAAP,CAFjB,yCAElBC,SAFkB,eAEPC,YAFO,8BAGKb,QAAQ,CAACQ,KAAK,CAACM,OAAP,CAHb,yCAGlBA,OAHkB,eAGTC,UAHS,eAKzB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CALyB,yCAMaX,MANb,mEAMZY,QANY,aAMZA,QANY,CAMFC,SANE,aAMFA,SANE,CAOvBF,OAAO,CAACG,IAAR,cACE,KAAC,YAAD,EACE,MAAM,CAAE,CAACF,QAAD,CAAWC,SAAX,CADV,CAEE,aAAa,CAAE,CACbE,KAAK,CAAE,gBAAM,CACXZ,KAAK,CAACa,SAAN,CAAgB,YAAhB,CAA8B,CAACJ,QAAD,CAAWC,SAAX,CAA9B,CAAqDT,GAAG,CAACa,OAAJ,EAArD,EACD,CAHY,CAFjB,EADF,EAPuB,EAMzB,+CAA8C,SAW7C,CAjBwB,qDAmBzB,mBACE,MAAC,YAAD,EACE,SAAS,CAAC,mBADZ,CAEE,MAAM,CAAER,OAFV,CAGE,IAAI,CAAEF,SAHR,CAIE,eAAe,CAAE,IAJnB,CAKE,WAAW,CAAEF,MALf,CAME,KAAK,CAAE,CAAEa,MAAM,CAAE,OAAV,CAAmBC,KAAK,CAAE,MAA1B,CANT,wBAQE,KAAC,SAAD,EACE,WAAW,CAAC,0EADd,CAEE,GAAG,CAAC,6EAFN,EARF,cAaE,KAAC,kBAAD,EACE,0BAA0B,CAAE,CAD9B,CAEE,mBAAmB,CAAE,KAFvB,UAIGR,OAJH,EAbF,GADF,CAsBD,CAzCD,CA2CA,cAAeT,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, CircleMarker } from \"react-leaflet\";\nimport { Images } from \"./PanoConfigs/PanoConfigJesse.json\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\n\nconst MapComp = (props) => {\n  const [map, setMap] = useState(null);\n  const [zoomLevel, setZoomLevel] = useState(props.zoom);\n  const [latLong, setlatLong] = useState(props.latLong);\n\n  let markers = [];\n  for (const { Latitude, Longitude } of Images) {\n    markers.push(\n      <CircleMarker\n        center={[Latitude, Longitude]}\n        eventHandlers={{\n          click: () => {\n            props.toggleMap(\"PanoViewer\", [Latitude, Longitude], map.getZoom());\n          },\n        }}\n      ></CircleMarker>\n    );\n  }\n\n  return (\n    <MapContainer\n      className=\"markercluster-map\"\n      center={latLong}\n      zoom={zoomLevel}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n      style={{ height: \"100vh\", width: \"100%\" }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n      />\n\n      <MarkerClusterGroup\n        spiderfyDistanceMultiplier={1}\n        showCoverageOnHover={false}\n      >\n        {markers}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n};\n\nexport default MapComp;\n"]},"metadata":{},"sourceType":"module"}