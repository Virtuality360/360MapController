{"ast":null,"code":"import _slicedToArray from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Button } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PannellumReact(props) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(180),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      yaw = _React$useState4[0],\n      setYaw = _React$useState4[1];\n\n  var _React$useState5 = React.useState(10),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      pitch = _React$useState6[0],\n      setPitch = _React$useState6[1];\n\n  function handleClickHotspot(evt, args, change) {\n    console.log(\"Change Pano Button Clicked\");\n    console.log(id);\n\n    if (change > 0) {\n      setYaw(180);\n      setPitch(10);\n    } else {\n      setYaw(0);\n      setPitch(0);\n    }\n\n    setId(id + change);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pannellum, {\n      width: \"100%\",\n      height: \"1100px\",\n      image: Images[id].ImageSrc,\n      pitch: pitch,\n      yaw: yaw,\n      hfov: 110,\n      autoLoad: true,\n      onLoad: function onLoad() {\n        console.log(\"panorama loaded\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pannellum.Hotspot, {\n        type: \"custom\",\n        pitch: 0,\n        yaw: 180,\n        handleClick: function handleClick(evt, args) {\n          return handleClickHotspot(evt, args, 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pannellum.Hotspot, {\n        type: \"custom\",\n        pitch: -5,\n        yaw: -5,\n        handleClick: function handleClick(evt, args) {\n          return handleClickHotspot(evt, args, -1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PannellumReact, \"izY8KfZ7SjNUKGzaMMizhZq5Xi0=\");\n\n_c = PannellumReact;\nexport default PannellumReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"PannellumReact\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx"],"names":["React","Component","Button","render","Pannellum","Images","PannellumReact","props","useState","id","setId","yaw","setYaw","pitch","setPitch","handleClickHotspot","evt","args","change","console","log","ImageSrc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EACA;AAAA;;AAAA,wBACsBP,KAAK,CAACQ,QAAN,CAAe,CAAf,CADtB;AAAA;AAAA,MACSC,EADT;AAAA,MACaC,KADb;;AAAA,yBAEwBV,KAAK,CAACQ,QAAN,CAAe,GAAf,CAFxB;AAAA;AAAA,MAESG,GAFT;AAAA,MAEcC,MAFd;;AAAA,yBAG4BZ,KAAK,CAACQ,QAAN,CAAe,EAAf,CAH5B;AAAA;AAAA,MAGSK,KAHT;AAAA,MAGgBC,QAHhB;;AAKE,WAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,MAAvC,EACA;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ;;AAEA,QAAGS,MAAM,GAAG,CAAZ,EACA;AACEN,MAAAA,MAAM,CAAC,GAAD,CAAN;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAJD,MAMA;AACEF,MAAAA,MAAM,CAAC,CAAD,CAAN;AACAE,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AAEDJ,IAAAA,KAAK,CAACD,EAAE,GAAGS,MAAN,CAAL;AACD;;AAAA;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,KAAK,EAAEb,MAAM,CAACI,EAAD,CAAN,CAAWY,QAHpB;AAIE,MAAA,KAAK,EAAER,KAJT;AAKE,MAAA,GAAG,EAAEF,GALP;AAME,MAAA,IAAI,EAAE,GANR;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,MAAM,EAAE,kBAAM;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAVH;AAAA,8BAYE,QAAC,SAAD,CAAW,OAAX;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,GAAG,EAAE,GAHP;AAIE,QAAA,WAAW,EAAE,qBAACJ,GAAD,EAAMC,IAAN;AAAA,iBAAeF,kBAAkB,CAACC,GAAD,EAAMC,IAAN,EAAY,CAAZ,CAAjC;AAAA;AAJf;AAAA;AAAA;AAAA;AAAA,cAZF,eAkBE,QAAC,SAAD,CAAW,OAAX;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,CAAC,CAFV;AAGE,QAAA,GAAG,EAAE,CAAC,CAHR;AAIE,QAAA,WAAW,EAAE,qBAACD,GAAD,EAAMC,IAAN;AAAA,iBAAeF,kBAAkB,CAACC,GAAD,EAAMC,IAAN,EAAY,CAAC,CAAb,CAAjC;AAAA;AAJf;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtDQX,c;;KAAAA,c;AAwDT,eAAeA,cAAf","sourcesContent":["import React, { Component, Button } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\n\nfunction PannellumReact(props)\n{\n  const [id, setId] = React.useState(0);\n  const [yaw, setYaw] = React.useState(180);\n  const [pitch, setPitch] = React.useState(10);\n\n  function handleClickHotspot(evt, args, change)\n  {\n    console.log(\"Change Pano Button Clicked\");\n    console.log(id);\n\n    if(change > 0)\n    {\n      setYaw(180);\n      setPitch(10);\n    }\n    else\n    {\n      setYaw(0);\n      setPitch(0);\n    }\n\n    setId(id + change);\n  };\n\n  return(\n    <div>\n      <Pannellum\n        width=\"100%\"\n        height=\"1100px\"\n        image={Images[id].ImageSrc}\n        pitch={pitch}\n        yaw={yaw}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n          console.log(\"panorama loaded\");\n        }}\n      >\n        <Pannellum.Hotspot\n          type=\"custom\"\n          pitch={0}\n          yaw={180}\n          handleClick={(evt, args) => handleClickHotspot(evt, args, 1)}\n        />\n        <Pannellum.Hotspot\n          type=\"custom\"\n          pitch={-5}\n          yaw={-5}\n          handleClick={(evt, args) => handleClickHotspot(evt, args, -1)}\n        />\n      </Pannellum>\n    </div>\n  )\n}\n\nexport default PannellumReact;\n\n \n"]},"metadata":{},"sourceType":"module"}