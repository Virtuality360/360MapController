{"ast":null,"code":"import _objectSpread from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/UIButton.js\";\nimport React, { Component } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport switchComponent from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UIButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(UIButton, _React$Component);\n\n  var _super = _createSuper(UIButton);\n\n  function UIButton(props) {\n    var _this;\n\n    _classCallCheck(this, UIButton);\n\n    _this = _super.call(this, props);\n    _this.toggleMap = props.toggleMap;\n    return _this;\n  }\n\n  _createClass(UIButton, [{\n    key: \"createButtonControl\",\n    value: function createButtonControl() {\n      var _this2 = this;\n\n      var MapHelp = L.Control.extend({\n        onAdd: function onAdd(map) {\n          var helpDiv = L.DomUtil.create(\"button\", \"\");\n          _this2.helpDiv = helpDiv;\n          helpDiv.innerHTML = _this2.props.title;\n          helpDiv.addEventListener(\"click\", function () {\n            _this2.props.toggleMap(\"Pano\");\n          });\n          return helpDiv;\n        }\n      });\n      return new MapHelp({\n        position: this.props.position\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var map = this.props.map;\n      var control = this.createButtonControl();\n      control.addTo(map);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.helpDiv.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return UIButton;\n}(React.Component);\n\nfunction withMap(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(function WrappedComponent(props) {\n    _s();\n\n    var map = useMap();\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, props), {}, {\n      map: map\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n}\n\nexport default _c = withMap(UIButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/UIButton.js"],"names":["React","Component","useMap","L","LeafletMouseEvent","Map","switchComponent","UIButton","props","toggleMap","MapHelp","Control","extend","onAdd","map","helpDiv","DomUtil","create","innerHTML","title","addEventListener","position","control","createButtonControl","addTo","remove","withMap","WrappedComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,CAAP,IAAYC,iBAAZ,EAA+BC,GAA/B,QAA0C,SAA1C;AACA,OAAOC,eAAP,MAA4B,OAA5B;;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;AACA,UAAKC,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AAFJ;AAGC;;;;WAED,+BAAsB;AAAA;;AACpB,UAAMC,OAAO,GAAGP,CAAC,CAACQ,OAAF,CAAUC,MAAV,CAAiB;AAC/BC,QAAAA,KAAK,EAAE,eAACC,GAAD,EAAS;AACd,cAAMC,OAAO,GAAGZ,CAAC,CAACa,OAAF,CAAUC,MAAV,CAAiB,QAAjB,EAA2B,EAA3B,CAAhB;AACA,UAAA,MAAI,CAACF,OAAL,GAAeA,OAAf;AACAA,UAAAA,OAAO,CAACG,SAAR,GAAoB,MAAI,CAACV,KAAL,CAAWW,KAA/B;AAEAJ,UAAAA,OAAO,CAACK,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACtC,YAAA,MAAI,CAACZ,KAAL,CAAWC,SAAX,CAAqB,MAArB;AACD,WAFD;AAIA,iBAAOM,OAAP;AACD;AAX8B,OAAjB,CAAhB;AAaA,aAAO,IAAIL,OAAJ,CAAY;AAAEW,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWa;AAAvB,OAAZ,CAAP;AACD;;;WAED,6BAAoB;AAAA,UACVP,GADU,GACF,KAAKN,KADH,CACVM,GADU;AAElB,UAAMQ,OAAO,GAAG,KAAKC,mBAAL,EAAhB;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcV,GAAd;AACD;;;WAED,gCAAuB;AACrB,WAAKC,OAAL,CAAaU,MAAb;AACD;;;WAED,kBAAS;AACP,aAAO,IAAP;AACD;;;;EArCoBzB,KAAK,CAACC,S;;AAwC7B,SAASyB,OAAT,CAAiBzB,SAAjB,EAA4B;AAAA;;AAC1B,YAAO,SAAS0B,gBAAT,CAA0BnB,KAA1B,EAAiC;AAAA;;AACtC,QAAMM,GAAG,GAAGZ,MAAM,EAAlB;AACA,wBAAO,QAAC,SAAD,kCAAeM,KAAf;AAAsB,MAAA,GAAG,EAAEM;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD;AAAA,YACcZ,MADd;AAAA;AAID;;AAED,oBAAewB,OAAO,CAACnB,QAAD,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L, { LeafletMouseEvent, Map } from \"leaflet\";\nimport switchComponent from \"./App\"\n\nclass UIButton extends React.Component {\n  helpDiv;\n  constructor(props)\n  {\n      super(props);\n      this.toggleMap = props.toggleMap;\n  }\n\n  createButtonControl() {\n    const MapHelp = L.Control.extend({\n      onAdd: (map) => {\n        const helpDiv = L.DomUtil.create(\"button\", \"\");\n        this.helpDiv = helpDiv;\n        helpDiv.innerHTML = this.props.title;\n\n        helpDiv.addEventListener(\"click\", () => {\n          this.props.toggleMap(\"Pano\");\n        });\n\n        return helpDiv;\n      }\n    });\n    return new MapHelp({ position: this.props.position });\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    const control = this.createButtonControl();\n    control.addTo(map);\n  }\n\n  componentWillUnmount() {\n    this.helpDiv.remove();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nfunction withMap(Component) {\n  return function WrappedComponent(props) {\n    const map = useMap();\n    return <Component {...props} map={map} />;\n  };\n}\n\nexport default withMap(UIButton);\n"]},"metadata":{},"sourceType":"module"}