{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/daltonchichester/Documents/GitHub/360MapController/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PannellumReact(props) {\n  _s();\n\n  var _useState = useState(\"GSAA2264\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(180),\n      _useState4 = _slicedToArray(_useState3, 2),\n      yaw = _useState4[0],\n      setYaw = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pitch = _useState6[0],\n      setPitch = _useState6[1];\n\n  function getJSONIndex() {\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageName) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  function renderHotspots() {\n    var info = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      if (id === Images[i].ImageName) {\n        info.push(Images[i].Hotspots);\n      }\n    }\n\n    console.log(info);\n    return info;\n  }\n\n  ;\n\n  function handleClickHotspot(path, pitch, yaw) {\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  }\n\n  ;\n  var hotspots = [];\n  var _Images$getJSONIndex = Images[getJSONIndex()],\n      ImageSrc = _Images$getJSONIndex.ImageSrc,\n      Hotspots = _Images$getJSONIndex.Hotspots;\n\n  var _iterator = _createForOfIteratorHelper(Hotspots),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          Pitch = _step$value.Pitch,\n          Yaw = _step$value.Yaw,\n          Path = _step$value.Path;\n      hotspots.push( /*#__PURE__*/_jsxDEV(CustomPannellumHotspot, {\n        type: \"custom\",\n        pitch: Pitch,\n        yaw: Yaw,\n        handleClick: handleClickHotspot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pannellum, {\n      width: \"100%\",\n      height: \"1100px\",\n      image: ImageSrc,\n      pitch: pitch,\n      yaw: yaw,\n      hfov: 110,\n      autoLoad: true,\n      onLoad: function onLoad() {\n        console.log(\"panorama loaded\");\n      },\n      children: hotspots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PannellumReact, \"7xjcyvE70ACfYB2c0ZKEyZpPP/w=\");\n\n_c = PannellumReact;\nexport default PannellumReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"PannellumReact\");","map":{"version":3,"sources":["/Users/daltonchichester/Documents/GitHub/360MapController/src/PannellumReact.jsx"],"names":["React","Component","Button","useState","useRef","render","Pannellum","Images","_","shortid","CustomPannellumHotspot","PannellumReact","props","id","setId","yaw","setYaw","pitch","setPitch","getJSONIndex","i","length","ImageName","renderHotspots","info","push","Hotspots","console","log","handleClickHotspot","path","hotspots","ImageSrc","Pitch","Yaw","Path"],"mappings":"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","sourcesContent":["import React, { Component, Button, useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { Pannellum } from \"pannellum-react\";\nimport { Images } from \"./CairoPanoConfig.json\";\nimport * as _ from 'underscore';\nimport * as shortid from 'shortid';\nimport CustomPannellumHotspot from \"./CustomPannellumHotspot\"\n\nfunction PannellumReact(props)\n{\n  const [id, setId] = useState(\"GSAA2264\");\n  const [yaw, setYaw] = useState(180);\n  const [pitch, setPitch] = useState(0);\n\n  function getJSONIndex()\n  {\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(id === Images[i].ImageName)\n      {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  function renderHotspots()\n  {\n    let info: Array<Array<any>> = [];\n    for (var i = 0; i < Images.length; i++) \n    {\n      if(id === Images[i].ImageName)\n      {\n        info.push(Images[i].Hotspots);\n      }\n    }\n    console.log(info);\n\n    return info;\n  };\n\n  function handleClickHotspot(path, pitch, yaw)\n  {\n    setYaw(yaw);\n    setPitch(pitch);\n    setId(path);\n  };\n\n  let hotspots = [];\n  const {ImageSrc, Hotspots} = Images[getJSONIndex()];\n\n  for(const {Pitch, Yaw, Path} of Hotspots)\n  {\n    hotspots.push(\n      <CustomPannellumHotspot\n        type=\"custom\"\n        pitch={Pitch}\n        yaw={Yaw}\n        handleClick= {handleClickHotspot}\n      />\n    )\n  }\n\n  return(\n    <div>\n      <Pannellum\n        width=\"100%\"\n        height=\"1100px\"\n        image={ImageSrc}\n        pitch={pitch}\n        yaw={yaw}\n        hfov={110}\n        autoLoad\n        onLoad={() => {\n          console.log(\"panorama loaded\");\n        }}\n      >\n        {hotspots}\n      </Pannellum>\n    </div>\n  )\n}\n\nexport default PannellumReact;\n\n \n"]},"metadata":{},"sourceType":"module"}